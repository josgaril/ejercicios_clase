openapi: 3.0.1
info:
  title: MF0966_3 Consulta y manipulación de infor contendia en gestores de datos
  description: Ejemplo de API con Swagger
  contact:
    email: jose@email.net
  license:
    name: Apache 2.0
    url: 'http://www¡.apache.org/licenses/LICENSE-2.0.html'
  version: 1.0.0
servers:
  - url: 'http://localhost:8080/MF0966_3/api/'
paths:
  /cursos:
    get:
      tags:
        - cursos
      summary: Obtener todos los cursos
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Curso'
  '/cursos/{id}':
    get:
      tags:
        - cursos
      summary: Obtener curso por id
      parameters:
        - name: id
          in: path
          description: ID del curso pedido
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Curso'
        '404':
          description: No se ha encontrado el curso
   
  /resenas:
    get:
      tags:
        - resenas
      summary: Obtener todos las resenas
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Resena'
    post:
      tags:
        - resenas
      summary: Dar de alta una resena nueva
      requestBody:
        description: Resena a añadir
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Resena'
        required: true
      responses:
        '201':
          description: Resena creada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resena'
  '/resenas/{id}':
    get:
      tags:
        - resenas
      summary: Obtener reseña por id
      parameters:
        - name: id
          in: path
          description: ID de la reseña pedida
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resena'
        '404':
          description: No se ha encontrado la reseña
    put:
      tags:
        - resenas
      summary: Modificar una reseña existente
      parameters:
        - name: id
          in: path
          description: Id de la reseña a modificar
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Reseña a modificar
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Resena'
        required: true
      responses:
        '200':
          description: Reseña modificada correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resena'
        '400':
          description: No coinciden los ids
        '404':
          description: No se ha encontrado la reseña a modificar
        
    delete:
      tags:
        - resenas
      summary: Borrar una reseña por su Id
      parameters:
        - name: id
          in: path
          description: ID de la reseña a borrar
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Reseña borrado
        '404':
          description: No se ha encontrado la reseña a borrar
        
components:
  schemas:
    Alumno:
      type: object
      properties:
        codigo:
          type: integer
          format: int64
        nombre: 
          type: string
        apellidos:
          type: string
        fNacimiento:
          type: string
        direccion:
          type: string
        poblacion:
          type: string
        codigopostal:
          type: integer
          format: int64
        telefono:
          type: integer
          format: int64
        email:
          type: string
        dni:
          type: string
        nHermanos:
          type: integer
          format: int64
        activo:
          type: boolean
    Cliente:
      type: object
      properties:
        codigo:
         type: integer
         format: int64
        nombre: 
          type: string
        email:
          type: string
        telefono:
          type: integer
          format: int64
        direccion:
          type: string
        poblacion:
          type: string
        codigopostal:
          type: integer
          format: int64
        identificador:
          type: string
        activo:
          type: boolean
    Profesor:
      type: object
      properties:
        codigo:
         type: integer
         format: int64
        nss:
          type: integer
          format: int64
        nombre: 
          type: string
        apellidos:
          type: string
        fNacimiento:
          type: string
        dni:
          type: string
        direccion:
          type: string
        poblacion:
          type: string
        codigopostal:
          type: integer
          format: int64
        telefono:
          type: integer
          format: int64
        email:
          type: string
        activo:
          type: boolean
    Curso :    
      type: object
      properties:
        codigo:
         type: integer
         format: int64
        nombre: 
          type: string
        identificador:
          type: string
        fInicio:
          type: string    
        fFin:
          type: string
        nHoras:
          type: integer
          format: int64
        temario:
          type: string
        activo:
          type: boolean
        cliente:
          $ref: '#/components/schemas/Cliente'
        precio:
          type: number
        profesor:
          $ref: '#/components/schemas/Profesor'
    Resena:
      type: object
      properties:
        id:
         type: integer
         format: int64
        resena: 
          type: string
        curso:
          $ref: '#/components/schemas/Curso'
        alumno:
          $ref: '#/components/schemas/Alumno'
