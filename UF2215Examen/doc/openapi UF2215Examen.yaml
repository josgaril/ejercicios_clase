openapi: 3.0.1
info:
  title: UF2215 Libros y autores
  description: Ejemplo de API con Swagger
  contact:
    email: jose@email.net
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  version: 1.0.0
servers:
  - url: 'http://localhost:8080/UF2215Examen/api/'
paths:
  /libros:
    get:
      tags:
        - libros
      summary: Obtener todos los libros
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Libro'
    post:
      tags:
        - libros
      summary: Dar de alta un libro nuevo
      requestBody:
        description: Libro a añadir
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Libro'
        required: true
      responses:
        '201':
          description: Libro creado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Libro'
  '/libros/{id}':
    get:
      tags:
        - libros
      summary: Obtener libros por id
      parameters:
        - name: id
          in: path
          description: ID del libro pedido
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Libro'
        '404':
          description: No se ha encontrado el libro
    put:
      tags:
        - libros
      summary: Modificar un libro existente
      parameters:
        - name: id
          in: path
          description: Id del libro a modificar
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Libro a modificar
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Libro'
        required: true
      responses:
        '200':
          description: Libro modificado correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Libro'
        '400':
          description: No coinciden los ids
        '404':
          description: No se ha encontrado el libro a modificar
        
    delete:
      tags:
        - libros
      summary: Borrar un libro por su Id
      parameters:
        - name: id
          in: path
          description: ID del libro a borrar
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Libro borrado
        '404':
          description: No se ha encontrado el libro a borrar
  '/libros/{titulo}':
    get:
      tags:
        - libros
      summary: Obtener libros por titulo
      parameters:
        - name: titulo
          in: path
          description: Titulo del libro pedido
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Libro'
        '404':
          description: No se ha encontrado el libro          
  /autores:
    get:
      tags:
        - autores
      summary: Obtener todos los autores
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Autor'
    post:
      tags:
        - autores
      summary: Dar de alta un autor nuevo
      requestBody:
        description: Autor a añadir
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Autor'
        required: true
      responses:
        '201':
          description: Autor creado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Autor'
  '/autores/{id}':
    get:
      tags:
        - autores
      summary: Obtener autor por id
      parameters:
        - name: id
          in: path
          description: ID del autor pedido
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Autor'
        '404':
          description: No se ha encontrado el autor
    put:
      tags:
        - autores
      summary: Modificar un autor existente
      parameters:
        - name: id
          in: path
          description: Id del autor a modificar
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Autor a modificar
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Autor'
        required: true
      responses:
        '200':
          description: Autor modificado correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Autor'
        '400':
          description: No coinciden los ids
        '404':
          description: No se ha encontrado el autor a modificar
        
    delete:
      tags:
        - autores
      summary: Borrar un autor por su Id
      parameters:
        - name: id
          in: path
          description: ID del autor a borrar
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Autor borrado
        '404':
          description: No se ha encontrado el Autor a borrar
        
components:
  schemas:
    Libro:
      type: object
      properties:
        id:
          type: integer
          format: int64
        titulo: 
          type: string
        isbn:
          type: string
        autor:
         $ref: '#/components/schemas/Autor'
    Autor:
      type: object
      properties:
        id:
         type: integer
         format: int64
        nombre: 
          type: string
        apellidos:
          type: string